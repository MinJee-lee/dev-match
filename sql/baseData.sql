/* 기존 시퀀스 삭제 */
DROP SEQUENCE seq_applicant_no;
DROP SEQUENCE seq_bookmark_no;
DROP SEQUENCE seq_file_no;
DROP SEQUENCE seq_skillhashtag_no;
DROP SEQUENCE seq_hashtag_no;
DROP SEQUENCE seq_noti_no;
DROP SEQUENCE seq_portfolio_no;
DROP SEQUENCE seq_post_no;
DROP SEQUENCE seq_reply_no;
DROP SEQUENCE seq_project_no;
DROP SEQUENCE seq_report_no;
DROP SEQUENCE seq_review_no;
DROP SEQUENCE seq_todo_no;

/* 시퀀스 생성 */
CREATE SEQUENCE seq_applicant_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_bookmark_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_file_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_skillhashtag_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_hashtag_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_noti_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_portfolio_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_post_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_reply_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_project_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_report_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_review_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_todo_no INCREMENT BY 1 START WITH 10;
CREATE SEQUENCE seq_vote_no INCREMENT BY 1 START WITH 10;


/* 기존 테이블 데이터 삭제 */
DELETE FROM MEMBER;
DELETE FROM PROJECT;
DELETE FROM HASHTAG;
DELETE FROM SKILL_HASHTAG;
DELETE FROM REPLY;
DELETE FROM TODO;



/* 테이블 구조 변경 */
ALTER TABLE PROJECT ADD (ENDPROJECT_CNT NUMBER);
ALTER TABLE PROJECT RENAME COLUMN ENDPROJECT_CNT TO END_PROJECT_CNT;
ALTER TABLE PROJECT ADD RECRUITMENT_MEMBER_CNT NUMBER;
ALTER TABLE PROJECT MODIFY(PROJECT_NAME VARCHAR2(60));
ALTER TABLE PROJECT MODIFY END_DATE NULL;
ALTER TABLE PROJECT MODIFY (PROJECT_DETAIL VARCHAR2(3000 BYTE));

ALTER TABLE TODO ADD REG_DATE DATE DEFAULT SYSDATE;

ALTER TABLE MEMBER ADD GRADE VARCHAR2(20) NOT NULL;
ALTER TABLE MEMBER MODIFY (ROLE DEFAULT 'NORMAL');
ALTER TABLE MEMBER MODIFY PASSWORD VARCHAR2(200);
ALTER TABLE MEMBER MODIFY ROLE DEFAULT 'USER';
ALTER TABLE MEMBER ADD FAIL_CNT NUMBER DEFAULT 0 NOT NULL;
ALTER TABLE MEMBER ADD MEMBER_WITHDRAWAL NUMBER DEFAULT 0;

ALTER TABLE POST ADD REPLY_CNT NUMBER DEFAULT 0 NOT NULL;

ALTER TABLE REVIEW MODIFY REVIEW_COMMENT VARCHAR2(300);

ALTER TABLE PORTFOLIO ADD PORT_TITLE VARCHAR(50) NOT NULL;
ALTER TABLE PORTFOLIO ADD PORT_MEMBER_CNT INTEGER NOT NULL;
ALTER TABLE PORTFOLIO ADD REG_DATE DATE;
ALTER TABLE PORTFOLIO MODIFY(port_title VARCHAR2(500));
ALTER TABLE PORTFOLIO MODIFY(port_description VARCHAR2(1000));

ALTER TABLE FILES ADD(FILE_SIZE NUMBER);
ALTER TABLE FILES DROP COLUMN UPLOAD_FILE_B;
ALTER TABLE FILES DROP COLUMN UPLOAD_FILE_C;


CREATE TABLE END_VOTE
(
    END_VOTE_NO NUMBER PRIMARY KEY ,
    USER_ID     VARCHAR2(20) NOT NULL REFERENCES MEMBER(USER_ID),
    PROJECT_NO  NUMBER NOT NULL REFERENCES PROJECT(PROJECT_NO)
);
alter table PROJECT drop column END_PROJECT_CNT;

--------------------------------------------------


drop table SKILL_HASHTAG;

drop sequence SEQ_SKILLHASHTAG_NO;

drop table HASHTAG;

create table HASHTAG
(
    HASHTAG_NO   NUMBER       not null
        primary key,
    HASHTAG      VARCHAR2(3000) not null,
    PROJECT_NO   NUMBER
        constraint HASHTAG_PROJECT_FK
            references PROJECT
                on delete cascade,
    PORTFOLIO_NO NUMBER
        constraint HASHTAG_PORTFOLIO_FK
            references PORTFOLIO
                on delete cascade
);

alter table APPLICANT add PORTFOLIO_NO NUMBER;


alter table APPLICANT
    add constraint APPLICANT_PORTFOLIO_PORTFOLIO_NO_FK
        foreign key (PORTFOLIO_NO) references PORTFOLIO
            on delete cascade;


--------------------------------------------------

/* 예제 데이터 */
INSERT INTO MEMBER (USER_ID, PASSWORD, EMAIL, NAME, ROLE, PROFILE_IMAGE, LAST_LOGIN_DATE, REG_DATE, PROJECT_WITHDRAWAL_DATE, REPORT_CNT, SELF_INTRO, MEMBER_STATUS, REVIEW_TOTAL_SCORE, LINK, PROJECT_HISTORY, PROJECT_NO, GRADE) VALUES ('user01', '1111', 'user01@test.com', '이재근', 'USER', 'DEFAULTImage.jpg', null, TO_DATE('2021-01-15 15:43:36', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-15 15:43:38', 'YYYY-MM-DD HH24:MI:SS'), 4, null, 'REPORT', 4, null, null, 1, 'BRONZE');
INSERT INTO MEMBER (USER_ID, PASSWORD, EMAIL, NAME, ROLE, PROFILE_IMAGE, LAST_LOGIN_DATE, REG_DATE, PROJECT_WITHDRAWAL_DATE, REPORT_CNT, SELF_INTRO, MEMBER_STATUS, REVIEW_TOTAL_SCORE, LINK, PROJECT_HISTORY, PROJECT_NO, GRADE) VALUES ('user02', '2222', 'user02@test.com', '이누리', 'USER', 'DEFAULTImage.jpg', null, TO_DATE('2021-01-15 15:40:03', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-15 15:40:07', 'YYYY-MM-DD HH24:MI:SS'), 0, null, 'DORMANT', 8, null, null, null, 'BRONZE');
INSERT INTO MEMBER (USER_ID, PASSWORD, EMAIL, NAME, ROLE, PROFILE_IMAGE, LAST_LOGIN_DATE, REG_DATE, PROJECT_WITHDRAWAL_DATE, REPORT_CNT, SELF_INTRO, MEMBER_STATUS, REVIEW_TOTAL_SCORE, LINK, PROJECT_HISTORY, PROJECT_NO, GRADE) VALUES ('user03', '3333', 'user03@test.com', '김혜인', 'ADMIN', 'DEFAULTImage.jpg', TO_DATE('2021-01-15 15:46:31', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-15 15:46:24', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-15 15:46:27', 'YYYY-MM-DD HH24:MI:SS'), 0, null, 'NORMAL', 0, null, null, null, 'GOLD');
INSERT INTO MEMBER (USER_ID, PASSWORD, EMAIL, NAME, ROLE, PROFILE_IMAGE, LAST_LOGIN_DATE, REG_DATE, PROJECT_WITHDRAWAL_DATE, REPORT_CNT, SELF_INTRO, MEMBER_STATUS, REVIEW_TOTAL_SCORE, LINK, PROJECT_HISTORY, PROJECT_NO, GRADE) VALUES ('user04', '4444', 'user04@test.com', '이민지', 'USER', 'DEFAULTImage.jpg', TO_DATE('2021-01-15 15:46:29', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-15 15:41:57', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-15 15:41:59', 'YYYY-MM-DD HH24:MI:SS'), 3, null, 'BLACK', 22, null, null, null, 'SILVER');
INSERT INTO MEMBER (USER_ID, PASSWORD, EMAIL, NAME, ROLE, PROFILE_IMAGE, LAST_LOGIN_DATE, REG_DATE, PROJECT_WITHDRAWAL_DATE, REPORT_CNT, SELF_INTRO, MEMBER_STATUS, REVIEW_TOTAL_SCORE, LINK, PROJECT_HISTORY, PROJECT_NO, GRADE) VALUES ('user05', '5555', 'user05@test.com', '장원하', 'USER', 'DEFAULTImage.jpg', null, TO_DATE('2021-01-14 15:38:42', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-15 15:38:49', 'YYYY-MM-DD HH24:MI:SS'), 2, null, 'NORMAL', 33, null, null, null, 'GOLD');

INSERT INTO PROJECT (PROJECT_NO, USER_ID, PROJECT_NAME, PROGRESS_CLASSIFICATION, PROJECT_CATEGORY, PRE_START_DATE, PRE_PERIOD, MEETING_METHOD, MEETING_LOCATION, APPLICATION_DEADLINE, END_DATE, PROJECT_DETAIL, REG_DATE, PROJECT_STATUS, PROJECT_VIEW_CNT, APPLICANT_QUESTION_A, APPLICANT_QUESTION_B, APPLICANT_QUESTION_C, ENDPROJECT_CNT, RECRUITMENT_MEMBER_CNT) VALUES (1, 'user01', 'testProject', 1, 1, TO_DATE('2021-01-18 16:18:04', 'YYYY-MM-DD HH24:MI:SS'), 100, 2, null, TO_DATE('2021-02-03 16:18:42', 'YYYY-MM-DD HH24:MI:SS'), null, '우리 프로젝트는 짱입니다.', TO_DATE('2021-01-15 16:19:09', 'YYYY-MM-DD HH24:MI:SS'), 1, 30, '자바 할줄 알아요?', null, null, null, 5);
INSERT INTO PROJECT (PROJECT_NO, USER_ID, PROJECT_NAME, PROGRESS_CLASSIFICATION, PROJECT_CATEGORY, PRE_START_DATE, PRE_PERIOD, MEETING_METHOD, MEETING_LOCATION, APPLICATION_DEADLINE, END_DATE, PROJECT_DETAIL, REG_DATE, PROJECT_STATUS, PROJECT_VIEW_CNT, APPLICANT_QUESTION_A, APPLICANT_QUESTION_B, APPLICANT_QUESTION_C, ENDPROJECT_CNT, RECRUITMENT_MEMBER_CNT) VALUES (2, 'user02', 'secondProject', 1, 2, TO_DATE('2020-12-16 16:32:03', 'YYYY-MM-DD HH24:MI:SS'), 33, 1, '서울시 강남구', TO_DATE('2021-01-05 16:32:27', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-12 16:32:39', 'YYYY-MM-DD HH24:MI:SS'), '어셈블리 같이 하실분?', TO_DATE('2020-12-09 16:32:58', 'YYYY-MM-DD HH24:MI:SS'), 3, 23, '몇살이세요', '하이요', null, 2, 3);
INSERT INTO PROJECT (PROJECT_NO, USER_ID, PROJECT_NAME, PROGRESS_CLASSIFICATION, PROJECT_CATEGORY, PRE_START_DATE, PRE_PERIOD, MEETING_METHOD, MEETING_LOCATION, APPLICATION_DEADLINE, END_DATE, PROJECT_DETAIL, REG_DATE, PROJECT_STATUS, PROJECT_VIEW_CNT, APPLICANT_QUESTION_A, APPLICANT_QUESTION_B, APPLICANT_QUESTION_C, ENDPROJECT_CNT, RECRUITMENT_MEMBER_CNT) VALUES (3, 'user04', 'thirdProject', 1, 1, TO_DATE('2021-01-19 14:17:10', 'YYYY-MM-DD HH24:MI:SS'), 50, 1, '서울시 강남구', TO_DATE('2021-01-24 14:18:36', 'YYYY-MM-DD HH24:MI:SS'), null, 'thirdProjectTest', TO_DATE('2021-01-19 14:18:48', 'YYYY-MM-DD HH24:MI:SS'), 1, 0, null, null, null, null, 4);

INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (1, 'user01', 'hello,정보처리기사 질문입니다', '정보처리기사 필기 합격 후에 실기에서 떨어져서 필기 합격 후 2년 기간중 마지막을 앞두고 있는데 필기 합격 후 실기 시험 칠 수 있는 2년 내에 필기 시험을 다시 볼 수 있나요? 다시 볼 수 있다면 필기 합격 기간이 다시 갱신되나요?', TO_DATE('2021-01-15 16:34:34', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (2, 'user02', '포트폴리오', '백엔드 개발자로 취업준비중인데요 포폴 만들때 간단하게 프론트로 웹사이트형식으로 만들긴했는데 무료/유료 포폴사이트가서 코드다운받아서 제꺼 넣는게 더 나을려나요..? 누가했는지 물어볼까요?', TO_DATE('2021-01-25 01:35:43', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (3, 'user03', '범내려온다', '범이내려온다', TO_DATE('2021-01-18 17:24:52', 'YYYY-MM-DD HH24:MI:SS'), 4, 3);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (4, 'user04', '퇴사후 공부 vs 회사다니면서 공부', '안녕하세요 형님들 29살 비it계열 직장인입니다. It회사로 이직을 원하여 독학으로 공부중인데요..퇴사후 제대로 공부할지 아님 장기간이지만 회사다니며 오래준비할지.. 너무고민이되네요 조언부탁드려요! 참고로 자바스크립트 공부중입니다', TO_DATE('2021-01-21 10:32:37', 'YYYY-MM-DD HH24:MI:SS'), 1, 2);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (10, 'user05', '국비지원 수료 후 부트캠프', '괜찮을까요?? 이유는 단 하나입니다. 고졸인 저의 학력에 보다 더 좋은 회사에 취업하고 싶은 욕구때문입니다. (고졸 국비지원 출신 보다는 고졸 국비지원 + 부트캠프 출신이 더 낫지 않을까 하는 생각때문입니다..) 선배님들의 조언 부탁드립니다.', TO_DATE('2021-01-24 12:03:43', 'YYYY-MM-DD HH24:MI:SS'), 2, 4);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (11, 'user03', '정직원에서 프리 전향후', '5월에 소득세만 신청하면 되나요?', TO_DATE('2021-01-25 09:48:59', 'YYYY-MM-DD HH24:MI:SS'), 0, 4);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (37, 'user01', '노트북 살라는데', '다들 어떻게 윈도우 기반으로 노트북 사려고 하는데 마이크로소프트 서피스 랩탑3가 좋을까요 삼성 갤럭시북 이온이 좋을까요? 스펙은 비슷한데 디자인이 서피스가 끌려서 서피스로 조금 기우는데  평이 별로더라구요. 가성비면에서는 삼성이 낫긴 한데 고민 되네요?', TO_DATE('2021-01-28 14:41:08', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (13, 'user04', '프리하다가 정직원하니 현타옴', '돈이 반토막 났음 ㅜㅜ', TO_DATE('2021-01-26 00:40:42', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (38, 'user01', '초보 뭐부터 해야할까요?', '공부방법좀 알려주세요', TO_DATE('2021-01-28 14:47:16', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (39, 'user01', '프리 550 vs 정규직 연봉 6000', '택1 하라면 어느것을 하실래요?', TO_DATE('2021-01-28 20:58:00', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);
INSERT INTO POST (POST_NO, USER_ID, POST_NAME, POST_CONTENT, REG_DATE, VIEW_CNT, REPLY_CNT) VALUES (36, 'user01', '안녕하세요', '회원가입했습니다.', TO_DATE('2021-01-28 20:45:51', 'YYYY-MM-DD HH24:MI:SS'), 0, 0);

INSERT INTO REPLY (REPLY_NO, POST_NO, PROJECT_NO, USER_ID, REPLY_CONTENT, REG_DATE) VALUES (1, 1, null, 'user01', '안녕하세요', TO_DATE('2021-01-15 16:45:29', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO REPLY (REPLY_NO, POST_NO, PROJECT_NO, USER_ID, REPLY_CONTENT, REG_DATE) VALUES (2, 2, null, 'user02', '하이요', TO_DATE('2021-01-15 16:45:57', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO REPLY (REPLY_NO, POST_NO, PROJECT_NO, USER_ID, REPLY_CONTENT, REG_DATE) VALUES (3, null, 1, 'user04', '어디서함?', TO_DATE('2021-01-15 16:46:23', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO REPLY (REPLY_NO, POST_NO, PROJECT_NO, USER_ID, REPLY_CONTENT, REG_DATE) VALUES (4, null, 2, 'user05', '신청함', TO_DATE('2021-01-15 16:46:54', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO TODO (TODO_NO, PROJECT_NO, USER_ID, TODO_CONTENT, TODO_STATUS) VALUES (1, 1, 'user01', 'Todo Test1', 2);
INSERT INTO TODO (TODO_NO, PROJECT_NO, USER_ID, TODO_CONTENT, TODO_STATUS) VALUES (2, 1, 'user01', 'Todo Test2', 2);
INSERT INTO TODO (TODO_NO, PROJECT_NO, USER_ID, TODO_CONTENT, TODO_STATUS) VALUES (3, 1, 'user01', 'Todo Test3', 2);

INSERT INTO HASHTAG (HASHTAG_NO, HASHTAG) VALUES ('2', '강아지');
INSERT INTO HASHTAG (HASHTAG_NO, HASHTAG) VALUES ('3', '고양이');

INSERT INTO SKILL_HASHTAG (SKILL_HASHTAG_NO, HASHTAG_NO, PROJECT_NO) VALUES ('1', '2', '3');
INSERT INTO SKILL_HASHTAG (SKILL_HASHTAG_NO, HASHTAG_NO, PROJECT_NO) VALUES ('2', '3', '3');

INSERT INTO PORTFOLIO (PORTFOLIO_NO, USER_ID, PROJECT_NO, PORT_PROJECT_START_DATE, PORT_PROJECT_END_DATE, PORT_DESCRIPTION, PORT_THUMBNAIL_IMAGE, PORT_TITLE, PORT_MEMBER_CNT, REG_DATE) VALUES (75, 'user01', null, TO_DATE('2021-01-01 00:01:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-01 00:02:00', 'YYYY-MM-DD HH24:MI:SS'), '- 판매자회원으로 로그인하면 일반회원과 동일한 기능을 이용할 수 있고 추가로 간단한 판매자 메뉴가 생성 - 판매자의 상품이 주문된 내역을 기간별, 상태별로 조회하는 주문내역조회, 등록상품조회, 정산내역조회가 있음', null, '의류 쇼핑몰 플랫폼 어플', 5, TO_DATE('2021-01-28 19:57:01', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO PORTFOLIO (PORTFOLIO_NO, USER_ID, PROJECT_NO, PORT_PROJECT_START_DATE, PORT_PROJECT_END_DATE, PORT_DESCRIPTION, PORT_THUMBNAIL_IMAGE, PORT_TITLE, PORT_MEMBER_CNT, REG_DATE) VALUES (76, 'user01', null, TO_DATE('2020-01-05 00:02:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2021-01-16 00:03:00', 'YYYY-MM-DD HH24:MI:SS'), '(앱 실행 프로세스) 1. 앱 실행시 스플래시 화면이 나오면 위치 퍼미션 (위치 퍼미션을 허용해야 앱을 이용 가능)t 2. 비회원을 경우 메인화면만 확인 가능 3. 비회원일때 다른 화면을 보고 싶으면 로그인을 해야 가능하며, 로그인 및 회원가입 화면으로 이동 4. 로그인이 따로 없기 때문에 회원가입 절차를 거치면 자동로그인으로 구성', null, '실시간 카페 예약 어플', 3, TO_DATE('2021-01-28 19:58:48', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO PORTFOLIO (PORTFOLIO_NO, USER_ID, PROJECT_NO, PORT_PROJECT_START_DATE, PORT_PROJECT_END_DATE, PORT_DESCRIPTION, PORT_THUMBNAIL_IMAGE, PORT_TITLE, PORT_MEMBER_CNT, REG_DATE) VALUES (81, 'user01', null, TO_DATE('2020-01-12 00:08:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2020-01-15 00:09:00', 'YYYY-MM-DD HH24:MI:SS'), '- 사이트 접속시 로그인화면으로 이동하며, 비회원은 사이트를 이용할 수 없음 - 회원가입은 이메일(ID), 비밀번호로 구성되어 있고 이메일 인증 후 이용가능', null, '광고 데이터 확인 페이지', 1, TO_DATE('2021-01-28 20:02:05', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO PORTFOLIO (PORTFOLIO_NO, USER_ID, PROJECT_NO, PORT_PROJECT_START_DATE, PORT_PROJECT_END_DATE, PORT_DESCRIPTION, PORT_THUMBNAIL_IMAGE, PORT_TITLE, PORT_MEMBER_CNT, REG_DATE) VALUES (82, 'user01', null, TO_DATE('2020-01-16 00:06:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2020-01-03 00:08:00', 'YYYY-MM-DD HH24:MI:SS'), '- 예약완료 후 방문한 고객의 QR코드를 찍으면 예약내역이 존재하고 30분내 방문이 맞다면 예약상태가 사용완료로 변경되고, 해당고객의 정보와 예약한 상품정보를 팝업 노출 - 판매자의 매장에 남겨진 리뷰에 답변을 작성', null, '위치기반 마감할인 정보', 4, TO_DATE('2021-01-28 20:03:08', 'YYYY-MM-DD HH24:MI:SS'));
INSERT INTO PORTFOLIO (PORTFOLIO_NO, USER_ID, PROJECT_NO, PORT_PROJECT_START_DATE, PORT_PROJECT_END_DATE, PORT_DESCRIPTION, PORT_THUMBNAIL_IMAGE, PORT_TITLE, PORT_MEMBER_CNT, REG_DATE) VALUES (83, 'user01', null, TO_DATE('2020-01-11 00:01:00', 'YYYY-MM-DD HH24:MI:SS'), TO_DATE('2020-01-16 00:01:00', 'YYYY-MM-DD HH24:MI:SS'), '[실행 프로세스] 1. 주요 기능 : 크리에이터, 증권사, LIVE  2. 메인 화면에서 크리에이터, 증권사, 개미지수의 실시간 랭킹 및 크리에이터 리포트, 강의, 카운셀 썸네일 확인  3. 카카오, 페이스북 로그인/회원가입을 이용하여 간편하게 가입/로그인 가능', null, '주식정보 커뮤니티', 5, TO_DATE('2021-01-28 20:04:22', 'YYYY-MM-DD HH24:MI:SS'));

INSERT INTO APPLICANT (APPLICANT_NO, USER_ID, PROJECT_NO, APPLICANT_STATUS, APPLICANT_ANSWER_A, INTRO_TO_MEMBER, REG_DATE) VALUES ('5', 'user03', '3', '2', '답변입니다3', '잘할게여', TO_DATE('2021-01-19 15:52:53', 'YYYY-MM-DD HH24:MI:SS'));








UPDATE PROJECT SET USER_ID = 'user01', PROJECT_NAME = 'Java 기반 연구장비 관련 시스템개발', PROGRESS_CLASSIFICATION = 1, PROJECT_CATEGORY = 1, PRE_START_DATE = TO_DATE('2021-01-18 16:18:04', 'YYYY-MM-DD HH24:MI:SS'), PRE_PERIOD = 100, MEETING_METHOD = 2, MEETING_LOCATION = null, APPLICATION_DEADLINE = TO_DATE('2021-02-03 16:18:42', 'YYYY-MM-DD HH24:MI:SS'), END_DATE = null, PROJECT_DETAIL = '프로젝트 개요 :
- 연구 장비 관련 시스템개발

프로젝트 우선순위 :
- 완성도 높은 산출물을 받아보는 것이 가장 중요합니다.

프로젝트 진행 상황 :
- 프로젝트 착수 후 요구사항을 분석하고 있습니다.
- 투입될 추가 인원을 모집하고 있습니다.

프로젝트 일정 :
- 2월 초~5월 말 정도로 예정

프로젝트 팀 구성 :
- PM 및 개발자

구인 배경 :
- 프로젝트 착수에 따른 인원 보충

계약 방식 :
- 업무 단위 계약이 아닌 기간 단위 계약을 체결합니다.
- 프로젝트 종료 조건은 정해진 기간 동안 업무를 하는 것입니다.

작업 방식 :
- 자사 상주 근무 필요

모집 인원 : 1명
경력 : 4~6년
책정 금액 : 월 500만 원

필요 요소 :
- 웹 프런트 개발
- 백엔드 개발

상세 업무 :
- 장비 자체를 관리하는 시스템입니다.
- 여러 기관들의 업무를 지원하는 시스템이며 디테일하게 업무와 관련된 페이지들이 많습니다.
- 내부 업무 중 페이지들을 그려서 기본적인 설계문서를 드릴 예정입니다.
- 해당 문서를 기반으로 관계된 것을 분석하고 개발을 진행합니다.

필수 기술 :
- Java, Spring, html, javascript, jquery, jstl, Oracle 등 웹 개발 기술

자격 요건 :
- 프로젝트 수행 경험 4~6년 차

우대 사항 :
- 업무 분석 가능 (업무 시스템으로 업무 흐름 파악이 중요합니다.)

복리 후생 :
- 휴가 및 초과 근무 수당은 협의가 필요합니다.

기타 유의사항 :
- 기재된 금액은 개발자 1명, 4개월을 기준으로 책정된 금액입니다.', REG_DATE = TO_DATE('2021-01-15 16:19:09', 'YYYY-MM-DD HH24:MI:SS'), PROJECT_STATUS = 1, PROJECT_VIEW_CNT = 595, APPLICANT_QUESTION_A = '자바 할줄 알아요?', APPLICANT_QUESTION_B = null, APPLICANT_QUESTION_C = null, RECRUITMENT_MEMBER_CNT = 5 WHERE PROJECT_NO = 1;
UPDATE PROJECT SET USER_ID = 'user02', PROJECT_NAME = 'React.js기반 웹 프론트 신규 개발', PROGRESS_CLASSIFICATION = 1, PROJECT_CATEGORY = 2, PRE_START_DATE = TO_DATE('2020-12-16 16:32:03', 'YYYY-MM-DD HH24:MI:SS'), PRE_PERIOD = 33, MEETING_METHOD = 1, MEETING_LOCATION = '서울시 강남구', APPLICATION_DEADLINE = TO_DATE('2021-01-05 16:32:27', 'YYYY-MM-DD HH24:MI:SS'), END_DATE = TO_DATE('2021-01-12 16:32:39', 'YYYY-MM-DD HH24:MI:SS'), PROJECT_DETAIL = '프로젝트 개요 :
- react기반 웹 프론트 신규 개발
- 크롬 확장 프로그램을 이용한 채용공고 데이터 수집 및 웹 서비스 개발

프로젝트 우선순위 :
- 완성도 높은 산출물을 받아보는 것이 가장 중요합니다.

프로젝트 진행 상황 :
- 프로젝트 개발 착수 준비 중이며, 요구사항을 분석하고 있습니다.

프로젝트 일정 :
- 2월 중순부터 시작하여 개발 완료까지 3개월 계획합니다.

프로젝트 팀 구성 :
- 프론트 개발팀 구성을 목표로 하고 있습니다.
- React.js로 프로트 개발자와 크롬 익스텐션(확장 프로그램) 개발자가 필요합니다.
- 완성도 높은 산출물을 받아보는 것이 가장 중요합니다.

구인 배경 :
- 기획, 디자인, 백엔드 개발자는 현재 프로젝트 진행 중입니다.
- 함께할 프론트 개발자분을 모집합니다.

계약 방식 :
- 업무 단위 계약이 아닌 기간 단위 계약을 체결합니다.
- 프로젝트 종료 조건은 정해진 기간 동안 업무를 하는 것입니다.

작업 방식 :
- 고객사 상주 근무 필요

모집 인원 : 3명
경력 : 5~9년
책정 금액 : 월 500만 원', REG_DATE = TO_DATE('2020-12-09 16:32:58', 'YYYY-MM-DD HH24:MI:SS'), PROJECT_STATUS = 3, PROJECT_VIEW_CNT = 35, APPLICANT_QUESTION_A = '몇살이세요', APPLICANT_QUESTION_B = '하이요', APPLICANT_QUESTION_C = null, RECRUITMENT_MEMBER_CNT = 3 WHERE PROJECT_NO = 2;

